name: Build Integration

on:
  push:
    branches: [ main ]
    tags:
      - 'v*'
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    name: Build for aarch64
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: arm64
      
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Get version
        id: version
        run: |
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/v}
          else
            VERSION="dev-$(date +%Y%m%d)-${GITHUB_SHA::7}"
          fi
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
      
      - name: Build
        run: |
          docker run --rm --name builder \
            --platform=linux/arm64 \
            --user=$(id -u):$(id -g) \
            -v "$PWD":/workspace \
            docker.io/unfoldedcircle/r2-pyinstaller:3.11.6 \
            bash -c "cd /workspace && \
              python -m pip install --upgrade pip && \
              python -m pip install -r requirements.txt && \
              pyinstaller --clean --onedir --name driver \
                intg-russound/driver.py"
      
      - name: Create package
        run: |
          mkdir -p artifacts/bin
          mv dist/driver/* artifacts/bin/
          cp driver.json artifacts/
          cd artifacts
          tar czf ../uc-intg-russound-${{ steps.version.outputs.VERSION }}-aarch64.tar.gz .
          cd ..
          rm -rf dist build artifacts
      
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: uc-intg-russound-${{ steps.version.outputs.VERSION }}-aarch64
          path: uc-intg-russound-*.tar.gz
      
      - name: Create Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: uc-intg-russound-*.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
